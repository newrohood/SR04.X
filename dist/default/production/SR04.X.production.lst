

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 14 23:23:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.32
    18                           ; Generated 02/02/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _CCPR1	set	4030
    53  0000                     _TMR1	set	4046
    54  0000                     _TXREG	set	4013
    55  0000                     _CCP1CON	set	4029
    56  0000                     _T1CON	set	4045
    57  0000                     _SPBRG	set	4015
    58  0000                     _BAUDCON	set	4024
    59  0000                     _RCSTA	set	4011
    60  0000                     _TXSTA	set	4012
    61  0000                     _OSCCON	set	4051
    62  0000                     _TRMT	set	32097
    63  0000                     _TMR1ON	set	32360
    64  0000                     _RC2	set	31762
    65  0000                     _RD0	set	31768
    66  0000                     _CCP1IF	set	31986
    67  0000                     _LATD0	set	31840
    68  0000                     _TRISD0	set	31912
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  007E80                     __pcinit:
    74                           	callstack 0
    75  007E80                     start_initialization:
    76                           	callstack 0
    77  007E80                     __initialization:
    78                           	callstack 0
    79  007E80                     end_of_initialization:
    80                           	callstack 0
    81  007E80                     __end_of__initialization:
    82                           	callstack 0
    83  007E80  0100               	movlb	0
    84  007E82  EFA4  F03F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89  000001                     ?___lwdiv:
    90                           	callstack 0
    91  000001                     Transmitir@BufferT:
    92                           	callstack 0
    93  000001                     ___lbmod@divisor:
    94                           	callstack 0
    95  000001                     ___lwdiv@dividend:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x0
    99  000001                     	ds	1
   100  000002                     ___lbmod@dividend:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x1
   104  000002                     	ds	1
   105  000003                     ___lbmod@counter:
   106                           	callstack 0
   107  000003                     ___lwdiv@divisor:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x2
   111  000003                     	ds	1
   112  000004                     ___lbmod@rem:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x3
   116  000004                     	ds	1
   117  000005                     ___lbdiv@divisor:
   118                           	callstack 0
   119  000005                     ___lwdiv@quotient:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x4
   123  000005                     	ds	1
   124  000006                     ___lbdiv@dividend:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x5
   128  000006                     	ds	1
   129  000007                     ___lbdiv@counter:
   130                           	callstack 0
   131  000007                     ___lwdiv@counter:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x6
   135  000007                     	ds	1
   136  000008                     ___lbdiv@quotient:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x7
   140  000008                     	ds	1
   141  000009                     ??_main:
   142                           
   143                           ; 1 bytes @ 0x8
   144  000009                     	ds	2
   145  00000B                     main@d:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0xA
   149  00000B                     	ds	1
   150                           
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 8 in file "SR04.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;  t               2    0        unsigned int 
   161 ;;  d               1   10[COMRAM] unsigned char 
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         1       0       0       0       0       0       0       0       0
   173 ;;      Temps:          2       0       0       0       0       0       0       0       0
   174 ;;      Totals:         3       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        3 bytes
   176 ;; Hardware stack levels required when called: 1
   177 ;; This function calls:
   178 ;;		_Transmitir
   179 ;;		___lbdiv
   180 ;;		___lbmod
   181 ;;		___lwdiv
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  007F48                     __ptext0:
   189                           	callstack 0
   190  007F48                     _main:
   191                           	callstack 30
   192                           
   193                           ;SR04.c: 9: unsigned int t;;SR04.c: 10: unsigned char d;;SR04.c: 11: OSCCON=0b01110000;
   194                           
   195                           ;incstack = 0
   196  007F48  0E70               	movlw	112
   197  007F4A  6ED3               	movwf	211,c	;volatile
   198                           
   199                           ;SR04.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
   200  007F4C  0E03               	movlw	3
   201  007F4E  6E09               	movwf	??_main^0,c
   202  007F50  0E98               	movlw	152
   203  007F52                     u207:
   204  007F52  2EE8               	decfsz	wreg,f,c
   205  007F54  D7FE               	bra	u207
   206  007F56  2E09               	decfsz	??_main^0,f,c
   207  007F58  D7FC               	bra	u207
   208                           
   209                           ;SR04.c: 13: TRISD0=0;
   210  007F5A  9095               	bcf	3989,0,c	;volatile
   211                           
   212                           ;SR04.c: 14: LATD0=0;
   213  007F5C  908C               	bcf	3980,0,c	;volatile
   214                           
   215                           ;SR04.c: 15: TXSTA=0b00100000;
   216  007F5E  0E20               	movlw	32
   217  007F60  6EAC               	movwf	172,c	;volatile
   218                           
   219                           ;SR04.c: 16: RCSTA=0b10000000;
   220  007F62  0E80               	movlw	128
   221  007F64  6EAB               	movwf	171,c	;volatile
   222                           
   223                           ;SR04.c: 17: BAUDCON=0b00000000;
   224  007F66  0E00               	movlw	0
   225  007F68  6EB8               	movwf	184,c	;volatile
   226                           
   227                           ;SR04.c: 18: SPBRG=12;
   228  007F6A  0E0C               	movlw	12
   229  007F6C  6EAF               	movwf	175,c	;volatile
   230                           
   231                           ;SR04.c: 19: T1CON=0b10010000;
   232  007F6E  0E90               	movlw	144
   233  007F70  6ECD               	movwf	205,c	;volatile
   234  007F72                     l992:
   235                           
   236                           ;SR04.c: 22: CCP1CON=0b00000100;
   237  007F72  0E04               	movlw	4
   238  007F74  6EBD               	movwf	189,c	;volatile
   239                           
   240                           ;SR04.c: 23: TMR1=0;
   241  007F76  0E00               	movlw	0
   242  007F78  6ECF               	movwf	207,c	;volatile
   243  007F7A  0E00               	movlw	0
   244  007F7C  6ECE               	movwf	206,c	;volatile
   245                           
   246                           ;SR04.c: 24: CCP1IF=0;
   247  007F7E  949E               	bcf	3998,2,c	;volatile
   248                           
   249                           ;SR04.c: 25: RD0=1;
   250  007F80  8083               	bsf	3971,0,c	;volatile
   251                           
   252                           ;SR04.c: 26: _delay((unsigned long)((10)*(8000000/4000000.0)));
   253  007F82  0E06               	movlw	6
   254  007F84                     u217:
   255  007F84  2EE8               	decfsz	wreg,f,c
   256  007F86  D7FE               	bra	u217
   257  007F88  D000               	nop2	
   258                           
   259                           ;SR04.c: 27: RD0=0;
   260  007F8A  9083               	bcf	3971,0,c	;volatile
   261  007F8C                     l44:
   262  007F8C  A482               	btfss	3970,2,c	;volatile
   263  007F8E  D7FE               	goto	l44
   264                           
   265                           ;SR04.c: 36: TMR1ON=1;
   266  007F90  80CD               	bsf	4045,0,c	;volatile
   267  007F92                     l47:
   268  007F92  A49E               	btfss	3998,2,c	;volatile
   269  007F94  D7FE               	goto	l47
   270                           
   271                           ;SR04.c: 38: TMR1ON=0;
   272  007F96  90CD               	bcf	4045,0,c	;volatile
   273                           
   274                           ;SR04.c: 39: d=CCPR1/58;
   275  007F98  CFBE F001          	movff	4030,___lwdiv@dividend	;volatile
   276  007F9C  CFBF F002          	movff	4031,___lwdiv@dividend+1	;volatile
   277  007FA0  0E00               	movlw	0
   278  007FA2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   279  007FA4  0E3A               	movlw	58
   280  007FA6  6E03               	movwf	___lwdiv@divisor^0,c
   281  007FA8  EC7B  F03F         	call	___lwdiv	;wreg free
   282  007FAC  5001               	movf	?___lwdiv^0,w,c
   283  007FAE  6E0B               	movwf	main@d^0,c
   284                           
   285                           ;SR04.c: 40: Transmitir(d/100 + 48);
   286  007FB0  0E64               	movlw	100
   287  007FB2  6E05               	movwf	___lbdiv@divisor^0,c
   288  007FB4  500B               	movf	main@d^0,w,c
   289  007FB6  EC5E  F03F         	call	___lbdiv
   290  007FBA  0F30               	addlw	48
   291  007FBC  EC43  F03F         	call	_Transmitir
   292                           
   293                           ;SR04.c: 41: Transmitir((d%100)/10 + 48);
   294  007FC0  0E0A               	movlw	10
   295  007FC2  6E05               	movwf	___lbdiv@divisor^0,c
   296  007FC4  0E64               	movlw	100
   297  007FC6  6E01               	movwf	___lbmod@divisor^0,c
   298  007FC8  500B               	movf	main@d^0,w,c
   299  007FCA  EC49  F03F         	call	___lbmod
   300  007FCE  EC5E  F03F         	call	___lbdiv
   301  007FD2  0F30               	addlw	48
   302  007FD4  EC43  F03F         	call	_Transmitir
   303                           
   304                           ;SR04.c: 42: Transmitir(d%10 + 48);
   305  007FD8  0E0A               	movlw	10
   306  007FDA  6E01               	movwf	___lbmod@divisor^0,c
   307  007FDC  500B               	movf	main@d^0,w,c
   308  007FDE  EC49  F03F         	call	___lbmod
   309  007FE2  0F30               	addlw	48
   310  007FE4  EC43  F03F         	call	_Transmitir
   311                           
   312                           ;SR04.c: 43: _delay((unsigned long)((1000)*(8000000/4000.0)));
   313  007FE8  0E0B               	movlw	11
   314  007FEA  6E0A               	movwf	(??_main+1)^0,c
   315  007FEC  0E26               	movlw	38
   316  007FEE  6E09               	movwf	??_main^0,c
   317  007FF0  0E5E               	movlw	94
   318  007FF2                     u227:
   319  007FF2  2EE8               	decfsz	wreg,f,c
   320  007FF4  D7FE               	bra	u227
   321  007FF6  2E09               	decfsz	??_main^0,f,c
   322  007FF8  D7FC               	bra	u227
   323  007FFA  2E0A               	decfsz	(??_main+1)^0,f,c
   324  007FFC  D7FA               	bra	u227
   325  007FFE  D7B9               	goto	l992
   326  008000                     __end_of_main:
   327                           	callstack 0
   328                           
   329 ;; *************** function ___lwdiv *****************
   330 ;; Defined at:
   331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  dividend        2    0[COMRAM] unsigned int 
   334 ;;  divisor         2    2[COMRAM] unsigned int 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  quotient        2    4[COMRAM] unsigned int 
   337 ;;  counter         1    6[COMRAM] unsigned char 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  2    0[COMRAM] unsigned int 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   347 ;;      Params:         4       0       0       0       0       0       0       0       0
   348 ;;      Locals:         3       0       0       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0
   350 ;;      Totals:         7       0       0       0       0       0       0       0       0
   351 ;;Total ram usage:        7 bytes
   352 ;; Hardware stack levels used: 1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text1
   361  007EF6                     __ptext1:
   362                           	callstack 0
   363  007EF6                     ___lwdiv:
   364                           	callstack 30
   365                           
   366                           ;incstack = 0
   367  007EF6  0E00               	movlw	0
   368  007EF8  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   369  007EFA  0E00               	movlw	0
   370  007EFC  6E05               	movwf	___lwdiv@quotient^0,c
   371  007EFE  5003               	movf	___lwdiv@divisor^0,w,c
   372  007F00  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   373  007F02  B4D8               	btfsc	status,2,c
   374  007F04  D01C               	goto	l540
   375  007F06  0E01               	movlw	1
   376  007F08  6E07               	movwf	___lwdiv@counter^0,c
   377  007F0A  D004               	goto	l960
   378  007F0C                     l958:
   379  007F0C  90D8               	bcf	status,0,c
   380  007F0E  3603               	rlcf	___lwdiv@divisor^0,f,c
   381  007F10  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   382  007F12  2A07               	incf	___lwdiv@counter^0,f,c
   383  007F14                     l960:
   384  007F14  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   385  007F16  D7FA               	goto	l958
   386  007F18                     u160:
   387  007F18  90D8               	bcf	status,0,c
   388  007F1A  3605               	rlcf	___lwdiv@quotient^0,f,c
   389  007F1C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   390  007F1E  5003               	movf	___lwdiv@divisor^0,w,c
   391  007F20  5C01               	subwf	___lwdiv@dividend^0,w,c
   392  007F22  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   393  007F24  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   394  007F26  A0D8               	btfss	status,0,c
   395  007F28  D005               	goto	l970
   396  007F2A  5003               	movf	___lwdiv@divisor^0,w,c
   397  007F2C  5E01               	subwf	___lwdiv@dividend^0,f,c
   398  007F2E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   399  007F30  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   400  007F32  8005               	bsf	___lwdiv@quotient^0,0,c
   401  007F34                     l970:
   402  007F34  90D8               	bcf	status,0,c
   403  007F36  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   404  007F38  3203               	rrcf	___lwdiv@divisor^0,f,c
   405  007F3A  2E07               	decfsz	___lwdiv@counter^0,f,c
   406  007F3C  D7ED               	goto	u160
   407  007F3E                     l540:
   408  007F3E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   409  007F42  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   410  007F46  0012               	return		;funcret
   411  007F48                     __end_of___lwdiv:
   412                           	callstack 0
   413                           
   414 ;; *************** function ___lbmod *****************
   415 ;; Defined at:
   416 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  dividend        1    wreg     unsigned char 
   419 ;;  divisor         1    0[COMRAM] unsigned char 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  dividend        1    1[COMRAM] unsigned char 
   422 ;;  rem             1    3[COMRAM] unsigned char 
   423 ;;  counter         1    2[COMRAM] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      unsigned char 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   433 ;;      Params:         1       0       0       0       0       0       0       0       0
   434 ;;      Locals:         3       0       0       0       0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447  007E92                     __ptext2:
   448                           	callstack 0
   449  007E92                     ___lbmod:
   450                           	callstack 30
   451                           
   452                           ;incstack = 0
   453                           ;___lbmod@dividend stored from wreg
   454  007E92  6E02               	movwf	___lbmod@dividend^0,c
   455  007E94  0E08               	movlw	8
   456  007E96  6E03               	movwf	___lbmod@counter^0,c
   457  007E98  0E00               	movlw	0
   458  007E9A  6E04               	movwf	___lbmod@rem^0,c
   459  007E9C                     l938:
   460  007E9C  90D8               	bcf	status,0,c
   461  007E9E  3402               	rlcf	___lbmod@dividend^0,w,c
   462  007EA0  3404               	rlcf	___lbmod@rem^0,w,c
   463  007EA2  6E04               	movwf	___lbmod@rem^0,c
   464  007EA4  90D8               	bcf	status,0,c
   465  007EA6  3602               	rlcf	___lbmod@dividend^0,f,c
   466  007EA8  5001               	movf	___lbmod@divisor^0,w,c
   467  007EAA  5C04               	subwf	___lbmod@rem^0,w,c
   468  007EAC  A0D8               	btfss	status,0,c
   469  007EAE  D002               	goto	l946
   470  007EB0  5001               	movf	___lbmod@divisor^0,w,c
   471  007EB2  5E04               	subwf	___lbmod@rem^0,f,c
   472  007EB4                     l946:
   473  007EB4  2E03               	decfsz	___lbmod@counter^0,f,c
   474  007EB6  D7F2               	goto	l938
   475  007EB8  5004               	movf	___lbmod@rem^0,w,c
   476  007EBA  0012               	return		;funcret
   477  007EBC                     __end_of___lbmod:
   478                           	callstack 0
   479                           
   480 ;; *************** function ___lbdiv *****************
   481 ;; Defined at:
   482 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbdiv.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  dividend        1    wreg     unsigned char 
   485 ;;  divisor         1    4[COMRAM] unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  dividend        1    5[COMRAM] unsigned char 
   488 ;;  quotient        1    7[COMRAM] unsigned char 
   489 ;;  counter         1    6[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      unsigned char 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         1       0       0       0       0       0       0       0       0
   500 ;;      Locals:         3       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         4       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        4 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text3
   513  007EBC                     __ptext3:
   514                           	callstack 0
   515  007EBC                     ___lbdiv:
   516                           	callstack 30
   517                           
   518                           ;incstack = 0
   519                           ;___lbdiv@dividend stored from wreg
   520  007EBC  6E06               	movwf	___lbdiv@dividend^0,c
   521  007EBE  0E00               	movlw	0
   522  007EC0  6E08               	movwf	___lbdiv@quotient^0,c
   523  007EC2  5005               	movf	___lbdiv@divisor^0,w,c
   524  007EC4  B4D8               	btfsc	status,2,c
   525  007EC6  D015               	goto	l932
   526  007EC8  0E01               	movlw	1
   527  007ECA  6E07               	movwf	___lbdiv@counter^0,c
   528  007ECC  D003               	goto	l920
   529  007ECE                     l916:
   530  007ECE  90D8               	bcf	status,0,c
   531  007ED0  3605               	rlcf	___lbdiv@divisor^0,f,c
   532  007ED2  2A07               	incf	___lbdiv@counter^0,f,c
   533  007ED4                     l920:
   534  007ED4  AE05               	btfss	___lbdiv@divisor^0,7,c
   535  007ED6  D7FB               	goto	l916
   536  007ED8                     u120:
   537  007ED8  90D8               	bcf	status,0,c
   538  007EDA  3608               	rlcf	___lbdiv@quotient^0,f,c
   539  007EDC  5005               	movf	___lbdiv@divisor^0,w,c
   540  007EDE  5C06               	subwf	___lbdiv@dividend^0,w,c
   541  007EE0  A0D8               	btfss	status,0,c
   542  007EE2  D003               	goto	l928
   543  007EE4  5005               	movf	___lbdiv@divisor^0,w,c
   544  007EE6  5E06               	subwf	___lbdiv@dividend^0,f,c
   545  007EE8  8008               	bsf	___lbdiv@quotient^0,0,c
   546  007EEA                     l928:
   547  007EEA  90D8               	bcf	status,0,c
   548  007EEC  3205               	rrcf	___lbdiv@divisor^0,f,c
   549  007EEE  2E07               	decfsz	___lbdiv@counter^0,f,c
   550  007EF0  D7F3               	goto	u120
   551  007EF2                     l932:
   552  007EF2  5008               	movf	___lbdiv@quotient^0,w,c
   553  007EF4  0012               	return		;funcret
   554  007EF6                     __end_of___lbdiv:
   555                           	callstack 0
   556                           
   557 ;; *************** function _Transmitir *****************
   558 ;; Defined at:
   559 ;;		line 46 in file "SR04.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  BufferT         1    wreg     unsigned char 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  BufferT         1    0[COMRAM] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         1       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text4
   587  007E86                     __ptext4:
   588                           	callstack 0
   589  007E86                     _Transmitir:
   590                           	callstack 30
   591                           
   592                           ;incstack = 0
   593                           ;Transmitir@BufferT stored from wreg
   594  007E86  6E01               	movwf	Transmitir@BufferT^0,c
   595  007E88                     
   596                           ;SR04.c: 47: while(TRMT==0);
   597  007E88  A2AC               	btfss	4012,1,c	;volatile
   598  007E8A  D7FE               	goto	l806
   599                           
   600                           ;SR04.c: 48: TXREG=BufferT;
   601  007E8C  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
   602  007E90  0012               	return		;funcret
   603  007E92                     __end_of_Transmitir:
   604                           	callstack 0
   605  0000                     
   606                           	psect	rparam
   607  0000                     
   608                           	psect	idloc
   609                           
   610                           ;Config register IDLOC0 @ 0x200000
   611                           ;	unspecified, using default values
   612  200000                     	org	2097152
   613  200000  FF                 	db	255
   614                           
   615                           ;Config register IDLOC1 @ 0x200001
   616                           ;	unspecified, using default values
   617  200001                     	org	2097153
   618  200001  FF                 	db	255
   619                           
   620                           ;Config register IDLOC2 @ 0x200002
   621                           ;	unspecified, using default values
   622  200002                     	org	2097154
   623  200002  FF                 	db	255
   624                           
   625                           ;Config register IDLOC3 @ 0x200003
   626                           ;	unspecified, using default values
   627  200003                     	org	2097155
   628  200003  FF                 	db	255
   629                           
   630                           ;Config register IDLOC4 @ 0x200004
   631                           ;	unspecified, using default values
   632  200004                     	org	2097156
   633  200004  FF                 	db	255
   634                           
   635                           ;Config register IDLOC5 @ 0x200005
   636                           ;	unspecified, using default values
   637  200005                     	org	2097157
   638  200005  FF                 	db	255
   639                           
   640                           ;Config register IDLOC6 @ 0x200006
   641                           ;	unspecified, using default values
   642  200006                     	org	2097158
   643  200006  FF                 	db	255
   644                           
   645                           ;Config register IDLOC7 @ 0x200007
   646                           ;	unspecified, using default values
   647  200007                     	org	2097159
   648  200007  FF                 	db	255
   649                           
   650                           	psect	config
   651                           
   652                           ;Config register CONFIG1L @ 0x300000
   653                           ;	unspecified, using default values
   654                           ;	PLL Prescaler Selection bits
   655                           ;	PLLDIV = 0x0, unprogrammed default
   656                           ;	System Clock Postscaler Selection bits
   657                           ;	CPUDIV = 0x0, unprogrammed default
   658                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   659                           ;	USBDIV = 0x0, unprogrammed default
   660  300000                     	org	3145728
   661  300000  00                 	db	0
   662                           
   663                           ;Config register CONFIG1H @ 0x300001
   664                           ;	Oscillator Selection bits
   665                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   666                           ;	Fail-Safe Clock Monitor Enable bit
   667                           ;	FCMEN = 0x0, unprogrammed default
   668                           ;	Internal/External Oscillator Switchover bit
   669                           ;	IESO = 0x0, unprogrammed default
   670  300001                     	org	3145729
   671  300001  09                 	db	9
   672                           
   673                           ;Config register CONFIG2L @ 0x300002
   674                           ;	unspecified, using default values
   675                           ;	Power-up Timer Enable bit
   676                           ;	PWRT = 0x1, unprogrammed default
   677                           ;	Brown-out Reset Enable bits
   678                           ;	BOR = 0x3, unprogrammed default
   679                           ;	Brown-out Reset Voltage bits
   680                           ;	BORV = 0x3, unprogrammed default
   681                           ;	USB Voltage Regulator Enable bit
   682                           ;	VREGEN = 0x0, unprogrammed default
   683  300002                     	org	3145730
   684  300002  1F                 	db	31
   685                           
   686                           ;Config register CONFIG2H @ 0x300003
   687                           ;	Watchdog Timer Enable bit
   688                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   689                           ;	Watchdog Timer Postscale Select bits
   690                           ;	WDTPS = 0xF, unprogrammed default
   691  300003                     	org	3145731
   692  300003  1E                 	db	30
   693                           
   694                           ; Padding undefined space
   695  300004                     	org	3145732
   696  300004  FF                 	db	255
   697                           
   698                           ;Config register CONFIG3H @ 0x300005
   699                           ;	unspecified, using default values
   700                           ;	CCP2 MUX bit
   701                           ;	CCP2MX = 0x1, unprogrammed default
   702                           ;	PORTB A/D Enable bit
   703                           ;	PBADEN = 0x1, unprogrammed default
   704                           ;	Low-Power Timer 1 Oscillator Enable bit
   705                           ;	LPT1OSC = 0x0, unprogrammed default
   706                           ;	MCLR Pin Enable bit
   707                           ;	MCLRE = 0x1, unprogrammed default
   708  300005                     	org	3145733
   709  300005  83                 	db	131
   710                           
   711                           ;Config register CONFIG4L @ 0x300006
   712                           ;	unspecified, using default values
   713                           ;	Stack Full/Underflow Reset Enable bit
   714                           ;	STVREN = 0x1, unprogrammed default
   715                           ;	Single-Supply ICSP Enable bit
   716                           ;	LVP = 0x1, unprogrammed default
   717                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   718                           ;	ICPRT = 0x0, unprogrammed default
   719                           ;	Extended Instruction Set Enable bit
   720                           ;	XINST = 0x0, unprogrammed default
   721                           ;	Background Debugger Enable bit
   722                           ;	DEBUG = 0x1, unprogrammed default
   723  300006                     	org	3145734
   724  300006  85                 	db	133
   725                           
   726                           ; Padding undefined space
   727  300007                     	org	3145735
   728  300007  FF                 	db	255
   729                           
   730                           ;Config register CONFIG5L @ 0x300008
   731                           ;	unspecified, using default values
   732                           ;	Code Protection bit
   733                           ;	CP0 = 0x1, unprogrammed default
   734                           ;	Code Protection bit
   735                           ;	CP1 = 0x1, unprogrammed default
   736                           ;	Code Protection bit
   737                           ;	CP2 = 0x1, unprogrammed default
   738                           ;	Code Protection bit
   739                           ;	CP3 = 0x1, unprogrammed default
   740  300008                     	org	3145736
   741  300008  0F                 	db	15
   742                           
   743                           ;Config register CONFIG5H @ 0x300009
   744                           ;	unspecified, using default values
   745                           ;	Boot Block Code Protection bit
   746                           ;	CPB = 0x1, unprogrammed default
   747                           ;	Data EEPROM Code Protection bit
   748                           ;	CPD = 0x1, unprogrammed default
   749  300009                     	org	3145737
   750  300009  C0                 	db	192
   751                           
   752                           ;Config register CONFIG6L @ 0x30000A
   753                           ;	unspecified, using default values
   754                           ;	Write Protection bit
   755                           ;	WRT0 = 0x1, unprogrammed default
   756                           ;	Write Protection bit
   757                           ;	WRT1 = 0x1, unprogrammed default
   758                           ;	Write Protection bit
   759                           ;	WRT2 = 0x1, unprogrammed default
   760                           ;	Write Protection bit
   761                           ;	WRT3 = 0x1, unprogrammed default
   762  30000A                     	org	3145738
   763  30000A  0F                 	db	15
   764                           
   765                           ;Config register CONFIG6H @ 0x30000B
   766                           ;	unspecified, using default values
   767                           ;	Configuration Register Write Protection bit
   768                           ;	WRTC = 0x1, unprogrammed default
   769                           ;	Boot Block Write Protection bit
   770                           ;	WRTB = 0x1, unprogrammed default
   771                           ;	Data EEPROM Write Protection bit
   772                           ;	WRTD = 0x1, unprogrammed default
   773  30000B                     	org	3145739
   774  30000B  E0                 	db	224
   775                           
   776                           ;Config register CONFIG7L @ 0x30000C
   777                           ;	unspecified, using default values
   778                           ;	Table Read Protection bit
   779                           ;	EBTR0 = 0x1, unprogrammed default
   780                           ;	Table Read Protection bit
   781                           ;	EBTR1 = 0x1, unprogrammed default
   782                           ;	Table Read Protection bit
   783                           ;	EBTR2 = 0x1, unprogrammed default
   784                           ;	Table Read Protection bit
   785                           ;	EBTR3 = 0x1, unprogrammed default
   786  30000C                     	org	3145740
   787  30000C  0F                 	db	15
   788                           
   789                           ;Config register CONFIG7H @ 0x30000D
   790                           ;	unspecified, using default values
   791                           ;	Boot Block Table Read Protection bit
   792                           ;	EBTRB = 0x1, unprogrammed default
   793  30000D                     	org	3145741
   794  30000D  40                 	db	64
   795                           tosu	equ	0xFFF
   796                           tosh	equ	0xFFE
   797                           tosl	equ	0xFFD
   798                           stkptr	equ	0xFFC
   799                           pclatu	equ	0xFFB
   800                           pclath	equ	0xFFA
   801                           pcl	equ	0xFF9
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           prodh	equ	0xFF4
   807                           prodl	equ	0xFF3
   808                           indf0	equ	0xFEF
   809                           postinc0	equ	0xFEE
   810                           postdec0	equ	0xFED
   811                           preinc0	equ	0xFEC
   812                           plusw0	equ	0xFEB
   813                           fsr0h	equ	0xFEA
   814                           fsr0l	equ	0xFE9
   815                           wreg	equ	0xFE8
   816                           indf1	equ	0xFE7
   817                           postinc1	equ	0xFE6
   818                           postdec1	equ	0xFE5
   819                           preinc1	equ	0xFE4
   820                           plusw1	equ	0xFE3
   821                           fsr1h	equ	0xFE2
   822                           fsr1l	equ	0xFE1
   823                           bsr	equ	0xFE0
   824                           indf2	equ	0xFDF
   825                           postinc2	equ	0xFDE
   826                           postdec2	equ	0xFDD
   827                           preinc2	equ	0xFDC
   828                           plusw2	equ	0xFDB
   829                           fsr2h	equ	0xFDA
   830                           fsr2l	equ	0xFD9
   831                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lbdiv
    ___lbdiv->___lbmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1022
                                              8 COMRAM     3     3      0
                         _Transmitir
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     311
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     314
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Transmitir
   ___lbdiv
     ___lbmod (ARG)
   ___lbmod
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 14 23:23:35 2022

      Transmitir@BufferT 0001                       l44 7F8C                       l47 7F92  
                    l540 7F3E                      l806 7E88                      l920 7ED4  
                    l916 7ECE                      l932 7EF2                      l928 7EEA  
                    l960 7F14                      l946 7EB4                      l938 7E9C  
                    l970 7F34                      l958 7F0C                      l992 7F72  
                    _RD0 007C18                      _RC2 007C12                      u120 7ED8  
                    u207 7F52                      u160 7F18                      u217 7F84  
                    u227 7FF2                      wreg 000FE8                     _TMR1 000FCE  
                   _TRMT 007D61                     _main 7F48                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of___lbdiv 7EF6  
                  _CCPR1 000FBE          __end_of___lbmod 7EBC                    _T1CON 000FCD  
                  _LATD0 007C60          __end_of___lwdiv 7F48                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
                  main@d 000B                    status 000FD8          ___lbdiv@divisor 0005  
        ___lbdiv@counter 0007          __initialization 7E80             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000                   _CCP1IF 007CF2  
                 _OSCCON 000FD3                   _TMR1ON 007E68                   _TRISD0 007CA8  
              ??___lbdiv 0006                ??___lbmod 0002                ??___lwdiv 0005  
                 isa$std 000001               _Transmitir 7E86         ___lbdiv@dividend 0006  
        ___lbmod@divisor 0001               __accesstop 0060  __end_of__initialization 7E80  
        ___lbmod@counter 0003            ___rparam_used 000001           __pcstackCOMRAM 0001  
       ___lbdiv@quotient 0008                  _CCP1CON 000FBD                  _BAUDCON 000FB8  
            ?_Transmitir 0001                  __Hparam 0000                  __Lparam 0000  
                ___lbdiv 7EBC                  ___lbmod 7E92                  ___lwdiv 7EF6  
                __pcinit 7E80                  __ramtop 0800                  __ptext0 7F48  
                __ptext1 7EF6                  __ptext2 7E92                  __ptext3 7EBC  
                __ptext4 7E86     end_of_initialization 7E80      __size_of_Transmitir 000C  
       ___lbmod@dividend 0002              ___lbmod@rem 0004      start_initialization 7E80  
           ??_Transmitir 0001         ___lwdiv@dividend 0001                 ?___lbdiv 0005  
               ?___lbmod 0001                 ?___lwdiv 0001       __end_of_Transmitir 7E92  
       ___lwdiv@quotient 0005                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___lbdiv 003A         __size_of___lbmod 002A         __size_of___lwdiv 0052  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007            __size_of_main 00B8  
               isa$xinst 000000  
